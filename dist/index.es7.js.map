{"version":3,"file":"index.es7.js","sources":["../src/components/Drawer/Drawer.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as DrawerPrimitive from \"@radix-ui/react-dialog\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"../Button/Button\";\n\nconst Drawer = DrawerPrimitive.Root;\n\nconst DrawerTrigger = DrawerPrimitive.Trigger;\n\nconst DrawerClose = DrawerPrimitive.Close;\n\nconst DrawerPortal = DrawerPrimitive.Portal;\n\nconst DrawerOverlay = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Overlay>,\n\tReact.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n\t<DrawerPrimitive.Overlay\n\t\tclassName={cn(\n\t\t\t\"fixed inset-0 z-50 bg-black/40 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:animate-in data-[state=open]:fade-in-0\",\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t\tref={ref}\n\t/>\n));\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;\n\nconst drawerVariants = cva(\n\t\"fixed z-50 gap-4 bg-white pt-[0.7em] shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=closed]:animate-out data-[state=open]:duration-500 data-[state=open]:animate-in\",\n\t{\n\t\tvariants: {\n\t\t\tside: {\n\t\t\t\ttop: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n\t\t\t\tbottom:\n\t\t\t\t\t\"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n\t\t\t\tleft: \"inset-y-0 left-0 h-full w-[35rem] border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left\",\n\t\t\t\tright:\n\t\t\t\t\t\"inset-y-0 right-0 h-full w-[35rem] border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"\",\n\t\t\t\tlarge: \"w-[90vw]\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tside: \"right\",\n\t\t\tsize: \"default\",\n\t\t},\n\t},\n);\n\ninterface DrawerContentProps\n\textends React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>,\n\t\tVariantProps<typeof drawerVariants> {}\n\nconst DrawerContent = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Content>,\n\tDrawerContentProps\n>(\n\t(\n\t\t{ side = \"right\", size = \"default\", className, children, ...props },\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<DrawerPortal>\n\t\t\t\t<DrawerOverlay />\n\t\t\t\t<DrawerPrimitive.Content\n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\tdrawerVariants({ side, size }),\n\t\t\t\t\t\t\"overflow-y-auto\",\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\t{...props}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t\t<DrawerPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-1 right-4 cursor-pointer rounded-sm opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-none disabled:pointer-events-none\">\n\t\t\t\t\t\t<Button variant=\"close\" />\n\t\t\t\t\t\t<span className=\"sr-only\">Close</span>\n\t\t\t\t\t</DrawerPrimitive.Close>\n\t\t\t\t</DrawerPrimitive.Content>\n\t\t\t</DrawerPortal>\n\t\t);\n\t},\n);\nDrawerContent.displayName = DrawerPrimitive.Content.displayName;\n\nconst DrawerHeader = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div\n\t\tclassName={cn(\n\t\t\t\"flex flex-col space-y-2 text-center sm:text-left\",\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n);\nDrawerHeader.displayName = \"DrawerHeader\";\n\nconst DrawerFooter = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div\n\t\tclassName={cn(\n\t\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n);\nDrawerFooter.displayName = \"DrawerFooter\";\n\nconst DrawerTitle = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Title>,\n\tReact.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n\t<DrawerPrimitive.Title\n\t\tref={ref}\n\t\tclassName={cn(\"text-foreground px-[0.8rem] text-xl font-bold\", className)}\n\t\t{...props}\n\t/>\n));\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName;\n\nconst DrawerDescription = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Description>,\n\tReact.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n\t<DrawerPrimitive.Description\n\t\tref={ref}\n\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\n\t\t{...props}\n\t/>\n));\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName;\n\n/**\n * SimpleDrawer is an alternative implementation that follows the `isOpen` and `close` pattern\n * from the original drawer implementation, providing an easier-to-use API.\n */\ninterface SimpleDrawerProps {\n\tisOpen: boolean;\n\tclose: () => void;\n\tchildren: React.ReactNode;\n\tside?: \"top\" | \"right\" | \"bottom\" | \"left\";\n\tsize?: \"default\" | \"large\";\n\tclassName?: string;\n}\n\nconst SimpleDrawer = ({\n\tisOpen,\n\tclose,\n\tchildren,\n\tside = \"right\",\n\tsize = \"default\",\n\tclassName,\n}: SimpleDrawerProps) => {\n\treturn (\n\t\t<Drawer open={isOpen} onOpenChange={(open) => !open && close()}>\n\t\t\t<DrawerContent side={side} size={size} className={className}>\n\t\t\t\t{children}\n\t\t\t</DrawerContent>\n\t\t</Drawer>\n\t);\n};\nSimpleDrawer.displayName = \"SimpleDrawer\";\n\nexport {\n\tDrawer,\n\tDrawerPortal,\n\tDrawerOverlay,\n\tDrawerTrigger,\n\tDrawerClose,\n\tDrawerContent,\n\tDrawerHeader,\n\tDrawerFooter,\n\tDrawerTitle,\n\tDrawerDescription,\n\tSimpleDrawer,\n\ttype SimpleDrawerProps,\n};\n"],"names":["Drawer","DrawerPrimitive","DrawerTrigger","DrawerClose","DrawerPortal","DrawerOverlay","React","className","props","ref","jsx","cn","drawerVariants","cva","DrawerContent","side","size","children","jsxs","Button","DrawerHeader","DrawerFooter","DrawerTitle","DrawerDescription"],"mappings":"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"}