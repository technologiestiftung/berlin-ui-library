{"version":3,"file":"index.cjs9.js","sources":["../src/components/Form.tsx"],"sourcesContent":["\"use client\";\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n\tController,\n\tFormProvider,\n\tuseFormContext,\n\ttype ControllerProps,\n\ttype FieldPath,\n\ttype FieldValues,\n} from \"react-hook-form\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Label } from \"./Label\";\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n\tTFieldValues extends FieldValues = FieldValues,\n\tTName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n\tname: TName;\n\trequired: boolean;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n\t{} as FormFieldContextValue,\n);\n\nconst FormField = <\n\tTFieldValues extends FieldValues = FieldValues,\n\tTName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>(\n\tprops: ControllerProps<TFieldValues, TName>,\n) => {\n\tconst { name, rules, ...rest } = props;\n\tconst isRequired = Boolean(rules?.required);\n\treturn (\n\t\t<FormFieldContext.Provider value={{ name, required: isRequired }}>\n\t\t\t<Controller {...{ name, rules, ...rest }} />\n\t\t</FormFieldContext.Provider>\n\t);\n};\n\nconst useFormField = () => {\n\tconst fieldContext = React.useContext(FormFieldContext);\n\tconst itemContext = React.useContext(FormItemContext);\n\tconst { getFieldState, formState } = useFormContext();\n\n\tconst fieldState = getFieldState(fieldContext.name, formState);\n\n\tif (!fieldContext) {\n\t\tthrow new Error(\"useFormField should be used within <FormField>\");\n\t}\n\n\tconst { id } = itemContext;\n\n\treturn {\n\t\tid,\n\t\tname: fieldContext.name,\n\t\trequired: fieldContext.required,\n\t\tformItemId: `${id}-form-item`,\n\t\tformDescriptionId: `${id}-form-item-description`,\n\t\tformMessageId: `${id}-form-item-message`,\n\t\t...fieldState,\n\t};\n};\n\ntype FormItemContextValue = {\n\tid: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n\t{} as FormItemContextValue,\n);\n\nconst formItemVariants = cva(\"space-y-2\", {\n\tvariants: {\n\t\tlayout: {\n\t\t\tvertical: \"flex flex-col space-y-2 bg-white\",\n\t\t\thorizontal: \"flex items-center space-x-4\",\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tlayout: \"vertical\",\n\t},\n});\n\nconst FormItem = React.forwardRef<\n\tHTMLDivElement,\n\tReact.HTMLAttributes<HTMLDivElement> & VariantProps<typeof formItemVariants>\n>(({ className, layout, ...props }, ref) => {\n\tconst id = React.useId();\n\n\treturn (\n\t\t<FormItemContext.Provider value={{ id }}>\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(formItemVariants({ layout, className }))}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</FormItemContext.Provider>\n\t);\n});\nFormItem.displayName = \"FormItem\";\n\nconst FormLabel = React.forwardRef<\n\tReact.ElementRef<typeof LabelPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, children, ...props }, ref) => {\n\tconst { error, formItemId, required } = useFormField();\n\n\treturn (\n\t\t<Label\n\t\t\tref={ref}\n\t\t\tclassName={cn(error && \"font-bold text-destructive\", className)}\n\t\t\thtmlFor={formItemId}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t{required && <span className=\"ml-1 text-destructive\">*</span>}\n\t\t</Label>\n\t);\n});\nFormLabel.displayName = \"FormLabel\";\n\nconst FormControl = React.forwardRef<\n\tReact.ElementRef<typeof Slot>,\n\tReact.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n\tconst { error, formItemId, formDescriptionId, formMessageId } =\n\t\tuseFormField();\n\n\treturn (\n\t\t<Slot\n\t\t\tref={ref}\n\t\t\tid={formItemId}\n\t\t\tclassName=\"border-2 border-black bg-white p-2\"\n\t\t\taria-describedby={\n\t\t\t\t!error\n\t\t\t\t\t? `${formDescriptionId}`\n\t\t\t\t\t: `${formDescriptionId} ${formMessageId}`\n\t\t\t}\n\t\t\taria-invalid={!!error}\n\t\t\t{...props}\n\t\t/>\n\t);\n});\nFormControl.displayName = \"FormControl\";\n\nconst FormDescription = React.forwardRef<\n\tHTMLParagraphElement,\n\tReact.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n\tconst { formDescriptionId } = useFormField();\n\n\treturn (\n\t\t<p\n\t\t\tref={ref}\n\t\t\tid={formDescriptionId}\n\t\t\tclassName={cn(\"text-sm text-muted-foreground\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n});\nFormDescription.displayName = \"FormDescription\";\n\nconst FormMessage = React.forwardRef<\n\tHTMLParagraphElement,\n\tReact.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n\tconst { error, formMessageId } = useFormField();\n\tconst body = error ? String(error?.message ?? \"\") : children;\n\n\tif (!body) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<p\n\t\t\tref={ref}\n\t\t\tid={formMessageId}\n\t\t\tclassName={cn(\"text-sm font-medium text-destructive\", className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{body}\n\t\t</p>\n\t);\n});\nFormMessage.displayName = \"FormMessage\";\n\nexport {\n\tuseFormField,\n\tForm,\n\tFormItem,\n\tFormLabel,\n\tFormControl,\n\tFormDescription,\n\tFormMessage,\n\tFormField,\n};\n"],"names":["Form","FormProvider","FormFieldContext","React","FormField","props","name","rules","rest","isRequired","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","id","formItemVariants","cva","FormItem","className","layout","ref","cn","FormLabel","children","error","formItemId","required","Label","FormControl","formDescriptionId","formMessageId","Slot","FormDescription","FormMessage","body"],"mappings":"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"}