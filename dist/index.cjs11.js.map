{"version":3,"file":"index.cjs11.js","sources":["../src/components/Drawer/Drawer.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as DrawerPrimitive from \"@radix-ui/react-dialog\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"../Button/Button\";\n\nconst Drawer = DrawerPrimitive.Root;\n\nconst DrawerTrigger = DrawerPrimitive.Trigger;\n\nconst DrawerClose = DrawerPrimitive.Close;\n\nconst DrawerPortal = DrawerPrimitive.Portal;\n\nconst DrawerOverlay = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Overlay>,\n\tReact.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n\t<DrawerPrimitive.Overlay\n\t\tclassName={cn(\n\t\t\t\"fixed inset-0 z-50 bg-black/40 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:animate-in data-[state=open]:fade-in-0\",\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t\tref={ref}\n\t/>\n));\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName;\n\nconst drawerVariants = cva(\n\t\"fixed z-50 gap-4 bg-background pt-[0.7em] shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=closed]:animate-out data-[state=open]:duration-500 data-[state=open]:animate-in\",\n\t{\n\t\tvariants: {\n\t\t\tside: {\n\t\t\t\ttop: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n\t\t\t\tbottom:\n\t\t\t\t\t\"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n\t\t\t\tleft: \"inset-y-0 left-0 h-full w-[35rem] border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left\",\n\t\t\t\tright:\n\t\t\t\t\t\"inset-y-0 right-0 h-full w-[35rem] border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"\",\n\t\t\t\tlarge: \"w-[90vw]\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tside: \"right\",\n\t\t\tsize: \"default\",\n\t\t},\n\t},\n);\n\ninterface DrawerContentProps\n\textends React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>,\n\t\tVariantProps<typeof drawerVariants> {}\n\nconst DrawerContent = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Content>,\n\tDrawerContentProps\n>(\n\t(\n\t\t{ side = \"right\", size = \"default\", className, children, ...props },\n\t\tref,\n\t) => {\n\t\treturn (\n\t\t\t<DrawerPortal>\n\t\t\t\t<DrawerOverlay />\n\t\t\t\t<DrawerPrimitive.Content\n\t\t\t\t\tref={ref}\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\tdrawerVariants({ side, size }),\n\t\t\t\t\t\t\"overflow-y-auto\",\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\t{...props}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t\t<DrawerPrimitive.Close className=\"absolute top-1 right-4 cursor-pointer rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:outline-none disabled:pointer-events-none data-[state=open]:bg-secondary\">\n\t\t\t\t\t\t<Button variant=\"close\" />\n\t\t\t\t\t\t<span className=\"sr-only\">Close</span>\n\t\t\t\t\t</DrawerPrimitive.Close>\n\t\t\t\t</DrawerPrimitive.Content>\n\t\t\t</DrawerPortal>\n\t\t);\n\t},\n);\nDrawerContent.displayName = DrawerPrimitive.Content.displayName;\n\nconst DrawerHeader = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div\n\t\tclassName={cn(\n\t\t\t\"flex flex-col space-y-2 text-center sm:text-left\",\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n);\nDrawerHeader.displayName = \"DrawerHeader\";\n\nconst DrawerFooter = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n\t<div\n\t\tclassName={cn(\n\t\t\t\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n);\nDrawerFooter.displayName = \"DrawerFooter\";\n\nconst DrawerTitle = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Title>,\n\tReact.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n\t<DrawerPrimitive.Title\n\t\tref={ref}\n\t\tclassName={cn(\"px-[0.8rem] text-xl font-bold text-foreground\", className)}\n\t\t{...props}\n\t/>\n));\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName;\n\nconst DrawerDescription = React.forwardRef<\n\tReact.ElementRef<typeof DrawerPrimitive.Description>,\n\tReact.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n\t<DrawerPrimitive.Description\n\t\tref={ref}\n\t\tclassName={cn(\"text-sm text-muted-foreground\", className)}\n\t\t{...props}\n\t/>\n));\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName;\n\n/**\n * SimpleDrawer is an alternative implementation that follows the `isOpen` and `close` pattern\n * from the original drawer implementation, providing an easier-to-use API.\n */\ninterface SimpleDrawerProps {\n\tisOpen: boolean;\n\tclose: () => void;\n\tchildren: React.ReactNode;\n\tside?: \"top\" | \"right\" | \"bottom\" | \"left\";\n\tsize?: \"default\" | \"large\";\n\tclassName?: string;\n}\n\nconst SimpleDrawer = ({\n\tisOpen,\n\tclose,\n\tchildren,\n\tside = \"right\",\n\tsize = \"default\",\n\tclassName,\n}: SimpleDrawerProps) => {\n\treturn (\n\t\t<Drawer open={isOpen} onOpenChange={(open) => !open && close()}>\n\t\t\t<DrawerContent side={side} size={size} className={className}>\n\t\t\t\t{children}\n\t\t\t</DrawerContent>\n\t\t</Drawer>\n\t);\n};\nSimpleDrawer.displayName = \"SimpleDrawer\";\n\nexport {\n\tDrawer,\n\tDrawerPortal,\n\tDrawerOverlay,\n\tDrawerTrigger,\n\tDrawerClose,\n\tDrawerContent,\n\tDrawerHeader,\n\tDrawerFooter,\n\tDrawerTitle,\n\tDrawerDescription,\n\tSimpleDrawer,\n\ttype SimpleDrawerProps,\n};\n"],"names":["Drawer","DrawerPrimitive","DrawerTrigger","DrawerClose","DrawerPortal","DrawerOverlay","React","className","props","ref","cn","drawerVariants","cva","DrawerContent","side","size","children","Button","DrawerHeader","DrawerFooter","DrawerTitle","DrawerDescription","SimpleDrawer","isOpen","close","open"],"mappings":"ghBASMA,EAASC,EAAgB,KAEzBC,EAAgBD,EAAgB,QAEhCE,EAAcF,EAAgB,MAE9BG,EAAeH,EAAgB,OAE/BI,EAAgBC,EAAM,WAG1B,CAAC,CAAE,UAAAC,EAAW,GAAGC,CAAM,EAAGC,IAC3BH,EAAA,cAACL,EAAgB,QAAhB,CACA,UAAWS,EAAA,GACV,yJACAH,CACD,EACC,GAAGC,EACJ,IAAAC,CAAA,CACD,CACA,EACDJ,EAAc,YAAcJ,EAAgB,QAAQ,YAEpD,MAAMU,EAAiBC,EAAA,IACtB,0MACA,CACC,SAAU,CACT,KAAM,CACL,IAAK,oGACL,OACC,6GACD,KAAM,wHACN,MACC,0HACF,EACA,KAAM,CACL,QAAS,GACT,MAAO,UAAA,CAET,EACA,gBAAiB,CAChB,KAAM,QACN,KAAM,SAAA,CACP,CAEF,EAMMC,EAAgBP,EAAM,WAI3B,CACC,CAAE,KAAAQ,EAAO,QAAS,KAAAC,EAAO,UAAW,UAAAR,EAAW,SAAAS,EAAU,GAAGR,CAAM,EAClEC,IAGEH,EAAA,cAAAF,EAAA,KACCE,EAAA,cAAAD,EAAA,IAAc,EACfC,EAAA,cAACL,EAAgB,QAAhB,CACA,IAAAQ,EACA,UAAWC,EAAA,GACVC,EAAe,CAAE,KAAAG,EAAM,KAAAC,EAAM,EAC7B,kBACAR,CACD,EACC,GAAGC,CAAA,EAEHQ,kBACAf,EAAgB,MAAhB,CAAsB,UAAU,2PAC/BK,EAAA,cAAAW,EAAA,OAAA,CAAO,QAAQ,OAAA,CAAQ,EACvBX,EAAA,cAAA,OAAA,CAAK,UAAU,SAAA,EAAU,OAAK,CAChC,CAAA,CAEF,CAGH,EACAO,EAAc,YAAcZ,EAAgB,QAAQ,YAEpD,MAAMiB,EAAe,CAAC,CACrB,UAAAX,EACA,GAAGC,CACJ,IACCF,EAAA,cAAC,MAAA,CACA,UAAWI,EAAA,GACV,mDACAH,CACD,EACC,GAAGC,CAAA,CACL,EAEDU,EAAa,YAAc,eAE3B,MAAMC,EAAe,CAAC,CACrB,UAAAZ,EACA,GAAGC,CACJ,IACCF,EAAA,cAAC,MAAA,CACA,UAAWI,EAAA,GACV,gEACAH,CACD,EACC,GAAGC,CAAA,CACL,EAEDW,EAAa,YAAc,eAErB,MAAAC,EAAcd,EAAM,WAGxB,CAAC,CAAE,UAAAC,EAAW,GAAGC,CAAM,EAAGC,IAC3BH,EAAA,cAACL,EAAgB,MAAhB,CACA,IAAAQ,EACA,UAAWC,EAAAA,GAAG,gDAAiDH,CAAS,EACvE,GAAGC,CAAA,CACL,CACA,EACDY,EAAY,YAAcnB,EAAgB,MAAM,YAE1C,MAAAoB,EAAoBf,EAAM,WAG9B,CAAC,CAAE,UAAAC,EAAW,GAAGC,CAAM,EAAGC,IAC3BH,EAAA,cAACL,EAAgB,YAAhB,CACA,IAAAQ,EACA,UAAWC,EAAAA,GAAG,gCAAiCH,CAAS,EACvD,GAAGC,CAAA,CACL,CACA,EACDa,EAAkB,YAAcpB,EAAgB,YAAY,YAe5D,MAAMqB,EAAe,CAAC,CACrB,OAAAC,EACA,MAAAC,EACA,SAAAR,EACA,KAAAF,EAAO,QACP,KAAAC,EAAO,UACP,UAAAR,CACD,oBAEGP,EAAO,CAAA,KAAMuB,EAAQ,aAAeE,GAAS,CAACA,GAAQD,EAAA,GACrDlB,EAAA,cAAAO,EAAA,CAAc,KAAAC,EAAY,KAAAC,EAAY,UAAAR,GACrCS,CACF,CACD,EAGFM,EAAa,YAAc"}