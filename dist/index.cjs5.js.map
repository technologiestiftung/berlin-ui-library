{"version":3,"file":"index.cjs5.js","sources":["../src/components/CopyToClipboardButton.tsx"],"sourcesContent":["import { Slot} from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"../lib/utils\"\nimport * as React from \"react\"\n\n\nconst copyToClipboardButtonVariants = cva(\n  \"ts:px-4 ts:py-2 ts:border-black ts:w-fit ts:border-2 ts:opacity-100 ts:hover:opacity-50 ts:flex ts:justify-center ts:items-center ts:text-black ts:h-[43px]\",\n  {\n    variants: {\n      variant: {\n        default: \"ts:bg-primary ts:text-white\",\n      },\n      size: {\n        default: \"ts:h-[43px] ts:w-fit\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction CopyToClipboardButton({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof copyToClipboardButtonVariants> & {\n    asChild?: boolean\n    onClick: () => void\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n      <Comp\n        className={cn(copyToClipboardButtonVariants())}\n        onClick={props.onClick}\n      >\n        <span className=\"ts:flex ts:flex-row ts:gap-1 ts:items-center\">\n          Copy Address\n        </span>\n      </Comp>\n  )\n}\n\nexport { CopyToClipboardButton, copyToClipboardButtonVariants } \n"],"names":["copyToClipboardButtonVariants","cva","CopyToClipboardButton","className","variant","size","asChild","props","Comp","Slot","React","cn"],"mappings":"weAMMA,EAAgCC,EAAA,IACpC,8JACA,CACE,SAAU,CACR,QAAS,CACP,QAAS,6BACX,EACA,KAAM,CACJ,QAAS,sBAAA,CAEb,EACA,gBAAiB,CACf,QAAS,UACT,KAAM,SAAA,CACR,CAEJ,EAEA,SAASC,EAAsB,CAC7B,UAAAC,EACA,QAAAC,EACA,KAAAC,EACA,QAAAC,EAAU,GACV,GAAGC,CACL,EAIK,CACG,MAAAC,EAAOF,EAAUG,EAAAA,KAAO,SAG1B,OAAAC,EAAA,cAACF,EAAA,CACC,UAAWG,EAAAA,GAAGX,GAA+B,EAC7C,QAASO,EAAM,OAAA,EAEdG,EAAA,cAAA,OAAA,CAAK,UAAU,8CAAA,EAA+C,cAE/D,CACF,CAEN"}