{"version":3,"file":"index.es22.js","sources":["../src/elements/Pills/Pills.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport TimesIcon from \"@/assets/icons/times_icon.svg?react\";\nimport InfoIcon from \"@/assets/icons/info_icon.svg?react\";\nimport ErrorIcon from \"@/assets/icons/error_icon.svg?react\";\nimport SuccessIcon from \"@/assets/icons/success_icon.svg?react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst pillVariants = cva(\n\t\"pill text-3.5 inline-flex w-auto min-w-[unset] items-center gap-[0.4em] rounded-full border border-transparent px-1.75 py-0.25 leading-[1.2] transition-colors\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: \"bg-black text-white\",\n\t\t\t\terror: \"bg-message-error text-text-error\",\n\t\t\t\tsuccess: \"bg-message-success text-text-success\",\n\t\t\t\tinfo: \"bg-message-info text-blue\",\n\t\t\t\tmessage: \"bg-message-default text-text-base\",\n\t\t\t\tfilter:\n\t\t\t\t\t\"bg-grey-dark text-black hover:bg-border-light data-[state=active]:bg-red data-[state=active]:text-white data-[state=active]:hover:bg-red\",\n\t\t\t},\n\t\t\tinverted: {\n\t\t\t\ttrue: \"\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"\",\n\t\t\t\tmd: \"text-3.5 rounded-full px-3.5 py-1.5 font-normal\",\n\t\t\t\tlg: \"text-4 rounded-full px-4 py-2 font-medium\",\n\t\t\t\txl: \"text-4.5 rounded-full px-5 py-2.5 font-medium\",\n\t\t\t},\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tvariant: \"default\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-black text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"error\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-text-error text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"success\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-text-success text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"info\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-blue text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"message\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-text-base text-white\",\n\t\t\t},\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"default\",\n\t\t\tinverted: false,\n\t\t},\n\t},\n);\n\nexport interface PillProps\n\textends React.HTMLAttributes<HTMLDivElement>,\n\t\tVariantProps<typeof pillVariants> {\n\t/**\n\t * Whether the pill is active (primarily used with filter variant)\n\t */\n\tactive?: boolean;\n\t/**\n\t * Function called when the pill is toggled (for filter variant)\n\t */\n\tonToggle?: () => void;\n\t/**\n\t * Value of the pill (used for filter variant in FilterPillGroup)\n\t */\n\tvalue?: string;\n\t/**\n\t * Whether to show the icon (applies to all variants that have icons)\n\t */\n\tshowIcon?: boolean;\n}\n\nconst Pill = React.forwardRef<HTMLDivElement, PillProps>(\n\t// eslint-disable-next-line complexity\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tvariant,\n\t\t\tinverted,\n\t\t\tsize,\n\t\t\tactive,\n\t\t\tonToggle,\n\t\t\tshowIcon = true,\n\t\t\tvalue: _value,\n\t\t\tchildren,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst isToggleable = variant === \"filter\" && onToggle !== undefined;\n\n\t\tconst handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (isToggleable) {\n\t\t\t\tonToggle?.();\n\t\t\t}\n\t\t\tprops.onClick?.(e);\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\tpillVariants({ variant, inverted, size, className }),\n\t\t\t\t\tactive && \"data-[state=active]\",\n\t\t\t\t\tisToggleable && \"cursor-pointer\",\n\t\t\t\t)}\n\t\t\t\tdata-state={active ? \"active\" : \"inactive\"}\n\t\t\t\tonClick={handleClick}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{showIcon && variant === \"info\" && (\n\t\t\t\t\t<InfoIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-blue\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\" ? \"size-4\" : \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{showIcon && variant === \"message\" && (\n\t\t\t\t\t<InfoIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-text-base\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\" ? \"size-4\" : \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{showIcon && variant === \"error\" && (\n\t\t\t\t\t<ErrorIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-text-error\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\" ? \"size-4\" : \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{showIcon && variant === \"success\" && (\n\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-text-success\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\" ? \"size-4\" : \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{children}\n\t\t\t\t{showIcon && variant === \"filter\" && active && (\n\t\t\t\t\t<TimesIcon\n\t\t\t\t\t\tclassName={cn(\"fill-white\", size === \"md\" || size === \"lg\" || size === \"xl\" ? \"size-4\" : \"size-3\")}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n);\n\nPill.displayName = \"Pill\";\n\nexport interface FilterPillGroupProps\n\textends React.HTMLAttributes<HTMLDivElement> {\n\t/**\n\t * The currently active filter values\n\t */\n\tactiveValues: string[];\n\t/**\n\t * Callback when a filter value is toggled\n\t */\n\tonValueToggle: (value: string) => void;\n\t/**\n\t * Size variant for all pills in the group\n\t */\n\tsize?: \"default\" | \"md\" | \"lg\" | \"xl\";\n\t/**\n\t * Whether to show icons for all pills in the group\n\t */\n\tshowIcon?: boolean;\n}\n\nconst FilterPillGroup = React.forwardRef<HTMLDivElement, FilterPillGroupProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tactiveValues,\n\t\t\tonValueToggle,\n\t\t\tsize = \"default\",\n\t\t\tshowIcon = true,\n\t\t\tchildren,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\t// Create a map of children with toggle props\n\t\tconst enhancedChildren = React.Children.map(children, (child) => {\n\t\t\tif (\n\t\t\t\tReact.isValidElement<PillProps>(child) &&\n\t\t\t\tchild.type === Pill &&\n\t\t\t\tchild.props.variant === \"filter\"\n\t\t\t) {\n\t\t\t\t// Get the value from the child's value prop or use the child's text content\n\t\t\t\tconst value =\n\t\t\t\t\tchild.props.value ||\n\t\t\t\t\t(typeof child.props.children === \"string\"\n\t\t\t\t\t\t? child.props.children\n\t\t\t\t\t\t: \"\");\n\n\t\t\t\tconst isActive = activeValues.includes(value);\n\n\t\t\t\treturn React.cloneElement(child as React.ReactElement<PillProps>, {\n\t\t\t\t\tactive: isActive,\n\t\t\t\t\tsize,\n\t\t\t\t\tshowIcon,\n\t\t\t\t\tonToggle: () => onValueToggle(value),\n\t\t\t\t\tvalue,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\"flex flex-wrap gap-2\", className)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{enhancedChildren}\n\t\t\t</div>\n\t\t);\n\t},\n);\n\nFilterPillGroup.displayName = \"FilterPillGroup\";\n\nexport { Pill, pillVariants, FilterPillGroup };\n"],"names":["pillVariants","cva","Pill","React","className","variant","inverted","size","active","onToggle","showIcon","_value","children","props","ref","isToggleable","handleClick","e","jsxs","cn","jsx","InfoIcon","ErrorIcon","SuccessIcon","TimesIcon","FilterPillGroup","activeValues","onValueToggle","enhancedChildren","child","value","isActive"],"mappings":"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"}