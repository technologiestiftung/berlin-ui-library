{"version":3,"file":"index.es22.js","sources":["../src/elements/Pills/Pills.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport TimesIcon from \"@/assets/icons/times.svg?react\";\nimport InfoIcon from \"@/assets/icons/info.svg?react\";\nimport ErrorIcon from \"@/assets/icons/error.svg?react\";\nimport SuccessIcon from \"@/assets/icons/success.svg?react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst pillVariants = cva(\n\t\"pill text-3.5 inline-flex w-auto min-w-[unset] items-center gap-[0.4em] rounded-full border border-transparent px-1.75 py-0.25 leading-[1.2] transition-colors\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: \"bg-black text-white\",\n\t\t\t\terror: \"bg-message-error text-text-error\",\n\t\t\t\tsuccess: \"bg-message-success text-text-success\",\n\t\t\t\tinfo: \"bg-message-info text-blue\",\n\t\t\t\tmessage: \"bg-message-default text-text-base\",\n\t\t\t\tfilter:\n\t\t\t\t\t\"bg-grey-dark text-black hover:bg-border-light data-[state=active]:bg-red data-[state=active]:text-white data-[state=active]:hover:bg-red\",\n\t\t\t\t\"filter-outline\":\n\t\t\t\t\t\"hover:bg-grey-light border-2 border-grey-dark bg-white text-black data-[state=active]:border-red data-[state=active]:bg-red data-[state=active]:text-white data-[state=active]:hover:bg-red\",\n\t\t\t},\n\t\t\tinverted: {\n\t\t\t\ttrue: \"\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"\",\n\t\t\t\tmd: \"text-3.5 rounded-full px-3.5 py-1.5 font-normal\",\n\t\t\t\tlg: \"text-4 rounded-full px-4 py-2 font-medium\",\n\t\t\t\txl: \"text-4.5 rounded-full px-5 py-2.5 font-medium\",\n\t\t\t},\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tvariant: \"default\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-black text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"error\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-text-error text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"success\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-text-success text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"info\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-blue text-white\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"message\",\n\t\t\t\tinverted: true,\n\t\t\t\tclassName: \"bg-text-base text-white\",\n\t\t\t},\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"default\",\n\t\t\tinverted: false,\n\t\t},\n\t},\n);\n\nexport interface PillProps\n\textends React.HTMLAttributes<HTMLDivElement>,\n\t\tVariantProps<typeof pillVariants> {\n\t/**\n\t * Whether the pill is active (primarily used with filter variant)\n\t */\n\tactive?: boolean;\n\t/**\n\t * Function called when the pill is toggled (for filter variant)\n\t */\n\tonToggle?: () => void;\n\t/**\n\t * Value of the pill (used for filter variant in FilterPillGroup)\n\t */\n\tvalue?: string;\n\t/**\n\t * Whether to show the icon (applies to all variants that have icons)\n\t */\n\tshowIcon?: boolean;\n}\n\nconst Pill = React.forwardRef<HTMLDivElement, PillProps>(\n\t// eslint-disable-next-line complexity\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tvariant,\n\t\t\tinverted,\n\t\t\tsize,\n\t\t\tactive,\n\t\t\tonToggle,\n\t\t\tshowIcon = true,\n\t\t\tvalue: _value,\n\t\t\tchildren,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst isToggleable =\n\t\t\t(variant === \"filter\" || variant === \"filter-outline\") &&\n\t\t\tonToggle !== undefined;\n\n\t\tconst handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n\t\t\tif (isToggleable) {\n\t\t\t\tonToggle?.();\n\t\t\t}\n\t\t\tprops.onClick?.(e);\n\t\t};\n\n\t\tconst handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n\t\t\tif (isToggleable && (e.key === \"Enter\" || e.key === \" \")) {\n\t\t\t\te.preventDefault();\n\t\t\t\tonToggle?.();\n\t\t\t}\n\t\t\tprops.onKeyDown?.(e);\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\tpillVariants({ variant, inverted, size, className }),\n\t\t\t\t\tactive && \"data-[state=active]\",\n\t\t\t\t\tisToggleable && \"cursor-pointer\",\n\t\t\t\t)}\n\t\t\t\tdata-state={active ? \"active\" : \"inactive\"}\n\t\t\t\tonClick={handleClick}\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\ttabIndex={isToggleable ? 0 : undefined}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{showIcon && variant === \"info\" && (\n\t\t\t\t\t<InfoIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-blue\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\"\n\t\t\t\t\t\t\t\t? \"size-4\"\n\t\t\t\t\t\t\t\t: \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{showIcon && variant === \"message\" && (\n\t\t\t\t\t<InfoIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-text-base\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\"\n\t\t\t\t\t\t\t\t? \"size-4\"\n\t\t\t\t\t\t\t\t: \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{showIcon && variant === \"error\" && (\n\t\t\t\t\t<ErrorIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-text-error\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\"\n\t\t\t\t\t\t\t\t? \"size-4\"\n\t\t\t\t\t\t\t\t: \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{showIcon && variant === \"success\" && (\n\t\t\t\t\t<SuccessIcon\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tinverted ? \"fill-white\" : \"fill-text-success\",\n\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\"\n\t\t\t\t\t\t\t\t? \"size-4\"\n\t\t\t\t\t\t\t\t: \"size-3\",\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{children}\n\t\t\t\t{showIcon &&\n\t\t\t\t\t(variant === \"filter\" || variant === \"filter-outline\") &&\n\t\t\t\t\tactive && (\n\t\t\t\t\t\t<TimesIcon\n\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\"fill-white\",\n\t\t\t\t\t\t\t\tsize === \"md\" || size === \"lg\" || size === \"xl\"\n\t\t\t\t\t\t\t\t\t? \"size-4\"\n\t\t\t\t\t\t\t\t\t: \"size-3\",\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n);\n\nPill.displayName = \"Pill\";\n\nexport interface FilterPillGroupProps\n\textends React.HTMLAttributes<HTMLDivElement> {\n\t/**\n\t * The currently active filter values\n\t */\n\tactiveValues: string[];\n\t/**\n\t * Callback when a filter value is toggled\n\t */\n\tonValueToggle: (value: string) => void;\n\t/**\n\t * Size variant for all pills in the group\n\t */\n\tsize?: \"default\" | \"md\" | \"lg\" | \"xl\";\n\t/**\n\t * Whether to show icons for all pills in the group\n\t */\n\tshowIcon?: boolean;\n}\n\nconst FilterPillGroup = React.forwardRef<HTMLDivElement, FilterPillGroupProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tactiveValues,\n\t\t\tonValueToggle,\n\t\t\tsize = \"default\",\n\t\t\tshowIcon = true,\n\t\t\tchildren,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\t// Create a map of children with toggle props\n\t\tconst enhancedChildren = React.Children.map(children, (child) => {\n\t\t\tif (\n\t\t\t\tReact.isValidElement<PillProps>(child) &&\n\t\t\t\tchild.type === Pill &&\n\t\t\t\t(child.props.variant === \"filter\" ||\n\t\t\t\t\tchild.props.variant === \"filter-outline\")\n\t\t\t) {\n\t\t\t\t// Get the value from the child's value prop or use the child's text content\n\t\t\t\tconst value =\n\t\t\t\t\tchild.props.value ||\n\t\t\t\t\t(typeof child.props.children === \"string\"\n\t\t\t\t\t\t? child.props.children\n\t\t\t\t\t\t: \"\");\n\n\t\t\t\tconst isActive = activeValues.includes(value);\n\n\t\t\t\treturn React.cloneElement(child as React.ReactElement<PillProps>, {\n\t\t\t\t\tactive: isActive,\n\t\t\t\t\tsize,\n\t\t\t\t\tshowIcon,\n\t\t\t\t\tonToggle: () => onValueToggle(value),\n\t\t\t\t\tvalue,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn child;\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\"flex flex-wrap gap-2\", className)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{enhancedChildren}\n\t\t\t</div>\n\t\t);\n\t},\n);\n\nFilterPillGroup.displayName = \"FilterPillGroup\";\n\nexport { Pill, pillVariants, FilterPillGroup };\n"],"names":["pillVariants","cva","Pill","React","className","variant","inverted","size","active","onToggle","showIcon","_value","children","props","ref","isToggleable","handleClick","e","handleKeyDown","jsxs","cn","jsx","InfoIcon","ErrorIcon","SuccessIcon","TimesIcon","FilterPillGroup","activeValues","onValueToggle","enhancedChildren","child","value","isActive"],"mappings":"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"}